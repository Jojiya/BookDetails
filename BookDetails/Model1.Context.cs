//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookDetails
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BookInfoEntities : DbContext
    {
        public BookInfoEntities()
            : base("name=BookInfoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Book> Books { get; set; }
    
        public virtual int Bookentry(Nullable<int> code, string book_name, string author, string available, Nullable<double> price, Nullable<int> sheldId, string des)
        {
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            var book_nameParameter = book_name != null ?
                new ObjectParameter("Book_name", book_name) :
                new ObjectParameter("Book_name", typeof(string));
    
            var authorParameter = author != null ?
                new ObjectParameter("Author", author) :
                new ObjectParameter("Author", typeof(string));
    
            var availableParameter = available != null ?
                new ObjectParameter("Available", available) :
                new ObjectParameter("Available", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var sheldIdParameter = sheldId.HasValue ?
                new ObjectParameter("SheldId", sheldId) :
                new ObjectParameter("SheldId", typeof(int));
    
            var desParameter = des != null ?
                new ObjectParameter("Des", des) :
                new ObjectParameter("Des", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bookentry", codeParameter, book_nameParameter, authorParameter, availableParameter, priceParameter, sheldIdParameter, desParameter);
        }
    }
}
